/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.coffeesys.ui;

import com.coffeesys.dao.NhanVienDAO;
import com.coffeesys.entity.NhanVien;
import com.coffeesys.utils.Auth;
import com.coffeesys.utils.MsgBox;
import com.coffeesys.utils.XImage;
import com.coffeesys.utils.XValidate;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author Admin
 */
public class QuenMatKhauJDialog extends javax.swing.JDialog implements ActionListener {

    /**
     * Creates new form DoiMatKhau
     */
    public QuenMatKhauJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMatKhauMoi = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtMatKhauMoi2 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        btnGuiOTP = new javax.swing.JButton();
        txtOTP = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMaNV = new javax.swing.JTextField();
        btnHien1 = new javax.swing.JButton();
        btnHien2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnXacNhan = new javax.swing.JButton();
        btnHuyBo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUÊN MẬT KHẨU");

        jLabel2.setText("Nhập email:");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel3.setText("Nhập OTP:");

        jLabel4.setText("Mật khẩu mới:");

        jLabel5.setText("Xác nhận mật khẩu mới:");

        btnGuiOTP.setText("Gửi OTP");
        btnGuiOTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiOTPActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã nhân viên");

        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });

        btnHien1.setText("Hiện");
        btnHien1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHien1ActionPerformed(evt);
            }
        });

        btnHien2.setText("Hiện");
        btnHien2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHien2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmail)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtOTP, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGuiOTP))
                    .addComponent(txtMaNV)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMatKhauMoi2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHien1)
                            .addComponent(btnHien2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuiOTP)
                    .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatKhauMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHien1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMatKhauMoi2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHien2))
                .addContainerGap())
        );

        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        btnHuyBo.setText("Hủy bỏ");
        btnHuyBo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyBoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnXacNhan)
                .addGap(18, 18, 18)
                .addComponent(btnHuyBo)
                .addContainerGap(165, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHuyBo, btnXacNhan});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXacNhan)
                    .addComponent(btnHuyBo))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnHuyBo, btnXacNhan});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnHuyBoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyBoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHuyBoActionPerformed

    private void btnGuiOTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiOTPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGuiOTPActionPerformed

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void btnHien1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHien1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHien1ActionPerformed

    private void btnHien2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHien2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnHien2ActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuenMatKhauJDialog dialog = new QuenMatKhauJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuiOTP;
    private javax.swing.JButton btnHien1;
    private javax.swing.JButton btnHien2;
    private javax.swing.JButton btnHuyBo;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhauMoi;
    private javax.swing.JPasswordField txtMatKhauMoi2;
    private javax.swing.JTextField txtOTP;
    // End of variables declaration//GEN-END:variables

    NhanVienDAO dao = new NhanVienDAO();
    static String body = "";
    static int count = 30;
    Timer t;
    static String error = "";
    
    public void init() {
        setLocationRelativeTo(null);
        setTitle("Quên Mật Khẩu");
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        
        addActionListener();
    }
    
    public void addActionListener() {
        btnGuiOTP.addActionListener(this);
        btnHuyBo.addActionListener(this);
        btnXacNhan.addActionListener(this);
        btnHien1.addActionListener(this);
        btnHien2.addActionListener(this);
    }
    @Override
    public void actionPerformed(ActionEvent ae) {
        if (ae.getSource() == btnGuiOTP) {
            int choice = sendOTP();
            if (choice == 1) {
                MsgBox.alert(this, "Vui lòng nhập email");
            } else if (choice == 2) {
                    MsgBox.alert(this, "Vui lòng nhập đúng định dạng email (vd: exam@...)");
            } else if (choice == 3) {
                MsgBox.alert(this, "Email không tồn tại");
            } else if (choice == 0) {
                MsgBox.alert(this, "Gửi OTP thành công");
            }
        } else if (ae.getSource() == btnHuyBo) {
            dispose();
        } else if (ae.getSource() == btnXacNhan) {
            if (update()) {
                MsgBox.alert(this, "Thay đổi mật khẩu thành công");
            } else {
                MsgBox.alert(this, error);
                error = "";
            }
                
            
        } else if (ae.getSource() == btnHien1) {
            showPassword(txtMatKhauMoi);
        } else if (ae.getSource() == btnHien2) {
            showPassword(txtMatKhauMoi2);
        }
    }
    
    public boolean update() {
        try {
            String matKhauMoi = new String(txtMatKhauMoi.getPassword());
            String matKhauMoi2 = new String(txtMatKhauMoi2.getPassword());
            //kiểm lỗi: để trống txtOTP
            if (!XValidate.checkString(txtOTP.getText().trim()))
                error += "Vui lòng nhập mã OTP được gửi vào email đã được điền ở trên\n";
            //kiểm lỗi: nếu OTP quá 30 giây
            else if (count == 30)
                error += "Mã OTP đã quá thời gian sử dụng\n";
            //kiểm lỗi: nhập mã OTP không trùng khớp
            else if (!txtOTP.getText().equals(body))
                error += "Mã OTP chưa trùng khớp\n";
            
            
            //kiểm lỗi: để trống txtmatkhaumoi hoặc txtmatkhaumoi2
            if (!XValidate.checkString(matKhauMoi) 
                    || !XValidate.checkString(matKhauMoi2))
                error += "Vui lòng nhập mật khẩu mới\n";
            //kiểm lỗi: 2 mật khẩu không giống nhau
            else if (matKhauMoi.equals(matKhauMoi2) 
                    && (!XValidate.checkString(matKhauMoi) 
                        || !XValidate.checkString(matKhauMoi2)))
                error += "Xác nhận mật khẩu mới chưa trùng khớp\n";
            
            if (!XValidate.checkString(txtMaNV.getText().trim()))
                error += "Vui lòng điền mã nhân viên\n";
            else {
                //kiểm lỗi: mã nhân viên có trùng khớp hay không
                for (NhanVien nv : dao.selectAll()) {
                    if (txtMaNV.getText().trim().equalsIgnoreCase(nv.getMaNV())
                            && error.equals("")) {
                        String maHoaMatKhau = encryptPassword(matKhauMoi);
                        nv.setMatKhau(maHoaMatKhau);
                        dao.update(nv);
                        error = "";
                        return true;
                    }
                }
            }
            error += "Mã nhân viên chưa đúng\n";
            return false;
        } catch (Exception ex) {
            throw new RuntimeException(ex);
        }
    }
    
    //mã hóa mật khẩu
    public String encryptPassword(String matKhau) {
        String encryptedPassword = "";
        try {
            // Tạo đối tượng MessageDigest với thuật toán SHA-256
            MessageDigest md = MessageDigest.getInstance("SHA-256");

            // Chuyển đổi mật khẩu thành mảng bytes
            byte[] passwordBytes = matKhau.getBytes();

            // Mã hóa mảng bytes của mật khẩu
            byte[] hashedBytes = md.digest(passwordBytes);

            // Chuyển đổi mã hóa thành chuỗi hex
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedBytes) {
                sb.append(String.format("%02x", b));
            }

            encryptedPassword = sb.toString();
            return encryptedPassword;
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }

        return null;
    }

    
    public int sendOTP() {
        try {
            String accountName = "hoangnmps26822@fpt.edu.vn";
            String accountPassword = new String ("xpbeyqkjnjfvteuw");
            //1.Tạo đối tượng Properties và chỉ định thông tin host, port
            Properties p = new Properties(); 
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);

            //2.Tạo đối tượng Session (phiên làm việc)
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(accountName, accountPassword);
                }
            });
            
            if (txtEmail.getText().trim().equalsIgnoreCase(""))
                return 1;
            if (XValidate.checkEmail(txtEmail.getText().trim()) == false)
                return 2;
            
            
            //nếu email trùng khớp với email trong databases
            for (NhanVien nv : dao.selectAll()) {
                if (nv.getEmail().equalsIgnoreCase(txtEmail.getText())) {
                    String from = accountName;
                    String to = txtEmail.getText();
                    String subject = "OTP";
                    body = getOTP();
                    Message msg = new MimeMessage(s);
                    msg.setFrom(new InternetAddress(from)); //email minh
                    msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to)); //nguoi nhan


                    String ccEmail = txtEmail.getText();
                    String bccEmail = txtEmail.getText();
                    msg.addRecipients(Message.RecipientType.CC, InternetAddress.parse(ccEmail));
                    msg.addRecipients(Message.RecipientType.BCC, InternetAddress.parse(bccEmail));

                    msg.setSubject(subject);
                    msg.setText(body);
                    //
                    Transport.send(msg);
                    
                    //gán rỗng cho mã OTP nếu quá 30 giây
                    resetOTP();
                    return 0;
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            //Logger.getLogger(SendMail.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 3;
    }
    
    public void showPassword(JPasswordField txt) {
        if (txt.echoCharIsSet()) {
            txt.setEchoChar((char) 0);
        } else {
            txt.setEchoChar('*');
        }
    }
    
    //lấy một số ngẫu nhiên, đổi thành chuỗi
    public String getOTP() {
        Random r = new Random();
        int ranNum = r.nextInt() / 2100;
        if (String.valueOf(ranNum).contains("-")) {
            return String.valueOf(ranNum * -1);
        } else 
            return String.valueOf(ranNum);
    }
    
    
    //sau 30 giây thì reset OPT về rỗng 
    public void resetOTP() {
        t = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                count--;
                if (count == 0) {
                    body = "";
                    count = 30;
                    t.stop();
                }
            }
        });
        t.start();
    }
}
