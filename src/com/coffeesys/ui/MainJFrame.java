/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coffeesys.ui;

import com.coffeesys.dao.ChiTietDonHangDAO;
import com.coffeesys.dao.CongThucDAO;
import com.coffeesys.dao.DonHangDAO;
import com.coffeesys.dao.LoaiSanPhamDAO;
import com.coffeesys.dao.NguyenLieuDAO;
import com.coffeesys.dao.SanPhamDAO;
import com.coffeesys.entity.ChiTietDonHang;
import com.coffeesys.entity.CongThuc;
import com.coffeesys.entity.DonHang;
import com.coffeesys.entity.KhachHang;
import com.coffeesys.entity.LoaiSanPham;
import com.coffeesys.entity.NguyenLieu;
import com.coffeesys.entity.SanPham;
import com.coffeesys.utils.Auth;
import com.coffeesys.utils.JDBCHelper;
import com.coffeesys.utils.MsgBox;
import com.coffeesys.utils.XDate;
import com.coffeesys.utils.XImage;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Timestamp;
import java.util.Date;
import java.util.Hashtable;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperReport;
import java.sql.*;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Admin
 */
public class MainJFrame extends javax.swing.JFrame {

    LoaiSanPhamDAO lspDAO = new LoaiSanPhamDAO();
    SanPhamDAO spDAO = new SanPhamDAO();
    DonHangDAO dhDAO = new DonHangDAO();
    ChiTietDonHangDAO ctdhDAO = new ChiTietDonHangDAO();

    KhachHang khachHang = null;
    DonHang donHang = null;

    String pattern = "dd-MM-yyyy HH:mm:ss";

    /**
     * Creates new form MainJFrame
     */
    public MainJFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ToolBar = new javax.swing.JToolBar();
        btnSanPham = new javax.swing.JButton();
        btnKhachHang = new javax.swing.JButton();
        btnNhanVien = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnDangXuat = new javax.swing.JButton();
        pnlTrangThai = new javax.swing.JPanel();
        lblTrangThai = new javax.swing.JLabel();
        lblDongHo = new javax.swing.JLabel();
        pnlQuanLyBanHang = new javax.swing.JPanel();
        pnlMenu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboLoaiSanPham = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        pnlOrder = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaDH = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNhanVien = new javax.swing.JTextField();
        txtKhachHang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btnTaoMoi = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThongTinKhachHang = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        txtTienKhachDua = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        btnHuyDonHang = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChiTietDonHang = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDonHang = new javax.swing.JTable();
        MenuBar = new javax.swing.JMenuBar();
        mnuHeThong = new javax.swing.JMenu();
        mniDoiMatKhau = new javax.swing.JMenuItem();
        mniThongTinCaNhan = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mniDangXuat = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        mnuQuanLy = new javax.swing.JMenu();
        mniQuanLySanPham = new javax.swing.JMenuItem();
        mniQuanLyKhachHang = new javax.swing.JMenuItem();
        mniQuanLyNhanVien = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mniQuanLyNguyenLieu = new javax.swing.JMenuItem();
        mniQuanLyXuatNhapKho = new javax.swing.JMenuItem();
        mnuThongKe = new javax.swing.JMenu();
        mniThongKeDoanhThu = new javax.swing.JMenuItem();
        mniThongKeSanPham = new javax.swing.JMenuItem();
        mniThongKeKhoHang = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ToolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ToolBar.setRollover(true);

        btnSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_report_card_20px.png"))); // NOI18N
        btnSanPham.setText("Sản phẩm");
        btnSanPham.setFocusable(false);
        btnSanPham.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSanPham.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamActionPerformed(evt);
            }
        });
        ToolBar.add(btnSanPham);

        btnKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_people_20px.png"))); // NOI18N
        btnKhachHang.setText("Khách hàng");
        btnKhachHang.setFocusable(false);
        btnKhachHang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKhachHang.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKhachHangActionPerformed(evt);
            }
        });
        ToolBar.add(btnKhachHang);

        btnNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_employee_20px.png"))); // NOI18N
        btnNhanVien.setText("Nhân viên");
        btnNhanVien.setFocusable(false);
        btnNhanVien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNhanVien.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanVienActionPerformed(evt);
            }
        });
        ToolBar.add(btnNhanVien);

        btnThongKe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_course_20px.png"))); // NOI18N
        btnThongKe.setText("Thống kê");
        btnThongKe.setFocusable(false);
        btnThongKe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThongKe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });
        ToolBar.add(btnThongKe);
        ToolBar.add(jSeparator2);

        btnDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_exit_20px.png"))); // NOI18N
        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.setFocusable(false);
        btnDangXuat.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDangXuat.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });
        ToolBar.add(btnDangXuat);

        pnlTrangThai.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTrangThai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_user_20px.png"))); // NOI18N
        lblTrangThai.setText("Hệ thống quản lý quán cà phê");

        lblDongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_alarm_clock_25px.png"))); // NOI18N

        javax.swing.GroupLayout pnlTrangThaiLayout = new javax.swing.GroupLayout(pnlTrangThai);
        pnlTrangThai.setLayout(pnlTrangThaiLayout);
        pnlTrangThaiLayout.setHorizontalGroup(
            pnlTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTrangThaiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTrangThai)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDongHo)
                .addContainerGap())
        );
        pnlTrangThaiLayout.setVerticalGroup(
            pnlTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTrangThaiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTrangThaiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTrangThai)
                    .addComponent(lblDongHo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMenu.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        jLabel1.setText("Loại sản phẩm:");

        cboLoaiSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSanPhamActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MaSP", "TenSP", "DonGia"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addGroup(pnlMenuLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cboLoaiSanPham, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlOrder.setBorder(javax.swing.BorderFactory.createTitledBorder("Order"));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setText("Mã đơn hàng:");

        txtMaDH.setEditable(false);

        jLabel3.setText("Ngày tạo:");

        txtNgayTao.setEditable(false);

        jLabel4.setText("Nhân viên:");

        txtNhanVien.setEditable(false);

        txtKhachHang.setEditable(false);

        jLabel5.setText("Khách hàng");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMaDH)
                    .addComponent(txtNgayTao)
                    .addComponent(txtNhanVien)
                    .addComponent(txtKhachHang))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel1);

        jLabel6.setText("Mã SP:");

        txtMaSP.setEditable(false);

        jLabel7.setText("Tên SP:");

        txtTenSP.setEditable(false);

        jLabel8.setText("Đơn giá:");

        txtDonGia.setEditable(false);

        jLabel9.setText("Số lượng:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtMaSP)
                    .addComponent(txtSoLuong))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 5, 5, 0));

        btnTaoMoi.setText("Tạo mới");
        btnTaoMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMoiActionPerformed(evt);
            }
        });
        jPanel4.add(btnTaoMoi);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel4.add(btnThem);

        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });
        jPanel4.add(btnCapNhat);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel4.add(btnXoa);

        btnThongTinKhachHang.setText("Khách hàng");
        btnThongTinKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongTinKhachHangActionPerformed(evt);
            }
        });
        jPanel4.add(btnThongTinKhachHang);

        jLabel10.setText("Tổng tiền:");

        txtTongTien.setEditable(false);

        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyPressed(evt);
            }
        });

        jLabel11.setText("Tiền khách đưa:");

        txtTienThua.setEditable(false);

        jLabel12.setText("Tiền thừa:");

        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnHuyDonHang.setText("Hủy đơn hàng");
        btnHuyDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyDonHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnThanhToan)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuyDonHang)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtTienThua)
                    .addComponent(txtTongTien)
                    .addComponent(txtTienKhachDua))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHuyDonHang, btnThanhToan});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtTienThua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThanhToan)
                    .addComponent(btnHuyDonHang))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        tblChiTietDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "MaSP", "TenSP", "DonGia", "SoLuong"
            }
        ));
        tblChiTietDonHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblChiTietDonHangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblChiTietDonHang);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblDonHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MaDH", "NhanVien", "KhachHang", "NgayTao", "TongTien"
            }
        ));
        tblDonHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonHangMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDonHang);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlOrderLayout = new javax.swing.GroupLayout(pnlOrder);
        pnlOrder.setLayout(pnlOrderLayout);
        pnlOrderLayout.setHorizontalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlOrderLayout.setVerticalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlQuanLyBanHangLayout = new javax.swing.GroupLayout(pnlQuanLyBanHang);
        pnlQuanLyBanHang.setLayout(pnlQuanLyBanHangLayout);
        pnlQuanLyBanHangLayout.setHorizontalGroup(
            pnlQuanLyBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyBanHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlQuanLyBanHangLayout.setVerticalGroup(
            pnlQuanLyBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQuanLyBanHangLayout.createSequentialGroup()
                .addGroup(pnlQuanLyBanHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        mnuHeThong.setText("Hệ thống");

        mniDoiMatKhau.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDoiMatKhau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_password_reset_20px.png"))); // NOI18N
        mniDoiMatKhau.setText("Đổi mật khẩu");
        mniDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDoiMatKhauActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDoiMatKhau);

        mniThongTinCaNhan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniThongTinCaNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_user_20px_1.png"))); // NOI18N
        mniThongTinCaNhan.setText("Thông tin cá nhân");
        mniThongTinCaNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThongTinCaNhanActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniThongTinCaNhan);
        mnuHeThong.add(jSeparator3);

        mniDangXuat.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mniDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_exit_20px.png"))); // NOI18N
        mniDangXuat.setText("Đăng xuất");
        mniDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniDangXuatActionPerformed(evt);
            }
        });
        mnuHeThong.add(mniDangXuat);
        mnuHeThong.add(jSeparator4);

        MenuBar.add(mnuHeThong);

        mnuQuanLy.setText("Quản lý");

        mniQuanLySanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_report_card_20px.png"))); // NOI18N
        mniQuanLySanPham.setText("Quản lý sản phẩm");
        mniQuanLySanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQuanLySanPhamActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniQuanLySanPham);

        mniQuanLyKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_people_20px.png"))); // NOI18N
        mniQuanLyKhachHang.setText("Quản lý khách hàng");
        mniQuanLyKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQuanLyKhachHangActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniQuanLyKhachHang);

        mniQuanLyNhanVien.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_employee_20px.png"))); // NOI18N
        mniQuanLyNhanVien.setText("Quản lý nhân viên");
        mniQuanLyNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQuanLyNhanVienActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniQuanLyNhanVien);
        mnuQuanLy.add(jSeparator1);

        mniQuanLyNguyenLieu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_book_20px.png"))); // NOI18N
        mniQuanLyNguyenLieu.setText("Quản lý nguyên liệu");
        mniQuanLyNguyenLieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQuanLyNguyenLieuActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniQuanLyNguyenLieu);

        mniQuanLyXuatNhapKho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_book_20px_1.png"))); // NOI18N
        mniQuanLyXuatNhapKho.setText("Quản lý xuất nhập kho");
        mniQuanLyXuatNhapKho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniQuanLyXuatNhapKhoActionPerformed(evt);
            }
        });
        mnuQuanLy.add(mniQuanLyXuatNhapKho);

        MenuBar.add(mnuQuanLy);

        mnuThongKe.setText("Thống kê");

        mniThongKeDoanhThu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_us_dollar_20px.png"))); // NOI18N
        mniThongKeDoanhThu.setText("Thống kê doanh thu");
        mniThongKeDoanhThu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThongKeDoanhThuActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniThongKeDoanhThu);

        mniThongKeSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_report_card_20px.png"))); // NOI18N
        mniThongKeSanPham.setText("Thống kê sản phẩm");
        mniThongKeSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThongKeSanPhamActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniThongKeSanPham);

        mniThongKeKhoHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffeesys/icons/icons8_book_20px_1.png"))); // NOI18N
        mniThongKeKhoHang.setText("Thống kê kho hàng");
        mniThongKeKhoHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniThongKeKhoHangActionPerformed(evt);
            }
        });
        mnuThongKe.add(mniThongKeKhoHang);

        MenuBar.add(mnuThongKe);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlTrangThai, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlQuanLyBanHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlQuanLyBanHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(pnlTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mniDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDoiMatKhauActionPerformed
        // TODO add your handling code here:
        openDoiMatKhauJDiaglog();
    }//GEN-LAST:event_mniDoiMatKhauActionPerformed

    private void mniDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniDangXuatActionPerformed
        // TODO add your handling code here:
        dangXuat();
    }//GEN-LAST:event_mniDangXuatActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        // TODO add your handling code here:
        dangXuat();
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void btnNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanVienActionPerformed
        // TODO add your handling code here:
        openNhanVienJDialog();
    }//GEN-LAST:event_btnNhanVienActionPerformed

    private void mniThongTinCaNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThongTinCaNhanActionPerformed
        // TODO add your handling code here:
        openThongTinCaNhanJDialog();
    }//GEN-LAST:event_mniThongTinCaNhanActionPerformed

    private void mniQuanLySanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQuanLySanPhamActionPerformed
        // TODO add your handling code here:
        openSanPhamJDialog();
    }//GEN-LAST:event_mniQuanLySanPhamActionPerformed

    private void mniQuanLyKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQuanLyKhachHangActionPerformed
        // TODO add your handling code here:
        openKhachHangJDialog();
    }//GEN-LAST:event_mniQuanLyKhachHangActionPerformed

    private void mniQuanLyNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQuanLyNhanVienActionPerformed
        // TODO add your handling code here:
        openNhanVienJDialog();
    }//GEN-LAST:event_mniQuanLyNhanVienActionPerformed

    private void mniQuanLyNguyenLieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQuanLyNguyenLieuActionPerformed
        // TODO add your handling code here:
        openNguyenLieuJDialog();
    }//GEN-LAST:event_mniQuanLyNguyenLieuActionPerformed

    private void mniQuanLyXuatNhapKhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniQuanLyXuatNhapKhoActionPerformed
        // TODO add your handling code here:
        openXuatNhapKhoJDialog();
    }//GEN-LAST:event_mniQuanLyXuatNhapKhoActionPerformed

    private void mniThongKeDoanhThuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThongKeDoanhThuActionPerformed
        // TODO add your handling code here:
        openThongKeJDialog();
    }//GEN-LAST:event_mniThongKeDoanhThuActionPerformed

    private void mniThongKeSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThongKeSanPhamActionPerformed
        // TODO add your handling code here:
        openThongKeJDialog();
    }//GEN-LAST:event_mniThongKeSanPhamActionPerformed

    private void mniThongKeKhoHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniThongKeKhoHangActionPerformed
        // TODO add your handling code here:
        openThongKeJDialog();
    }//GEN-LAST:event_mniThongKeKhoHangActionPerformed

    private void btnSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamActionPerformed
        // TODO add your handling code here:
        openSanPhamJDialog();
    }//GEN-LAST:event_btnSanPhamActionPerformed

    private void btnKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKhachHangActionPerformed
        // TODO add your handling code here:
        openKhachHangJDialog();
    }//GEN-LAST:event_btnKhachHangActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        // TODO add your handling code here:
        openThongKeJDialog();
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void cboLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSanPhamActionPerformed
        // TODO add your handling code here:
        fillTableSanPham();
    }//GEN-LAST:event_cboLoaiSanPhamActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        int index = tblSanPham.rowAtPoint(evt.getPoint());
        selectSanPham(index);
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnTaoMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMoiActionPerformed
        // TODO add your handling code here:
        createDonDang();
    }//GEN-LAST:event_btnTaoMoiActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        addSanPham();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        removeSanPham();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblChiTietDonHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblChiTietDonHangMouseClicked
        // TODO add your handling code here:
        int index = tblChiTietDonHang.rowAtPoint(evt.getPoint());
        selectChiTietDonHang(index);
    }//GEN-LAST:event_tblChiTietDonHangMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        // TODO add your handling code here:
        updateSanPham();
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void txtTienKhachDuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            tinhTienThua();
        }

    }//GEN-LAST:event_txtTienKhachDuaKeyPressed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnHuyDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyDonHangActionPerformed
        // TODO add your handling code here:
        huyDonHang();
    }//GEN-LAST:event_btnHuyDonHangActionPerformed

    private void btnThongTinKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongTinKhachHangActionPerformed
        // TODO add your handling code here:
        selectKhachHang();
    }//GEN-LAST:event_btnThongTinKhachHangActionPerformed

    private void tblDonHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonHangMouseClicked
        // TODO add your handling code here:
        if (tblDonHang.getRowSelectionAllowed() == true) {
            int index = tblDonHang.rowAtPoint(evt.getPoint());
            selectDonHang(index);
        }
    }//GEN-LAST:event_tblDonHangMouseClicked
    
    NguyenLieuDAO nlDAO = new NguyenLieuDAO();
    
    public void init() {
        setIconImage(XImage.getAppIcon());
        setLocationRelativeTo(null);
        setTitle("HỆ THỐNG QUẢN LÝ QUÁN CÀ PHÊ");

        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                lblDongHo.setText(XDate.toString(new Date(), "HH:mm:ss"));
            }
        }).start();


        fillComboBoxLoaiSanPham();
        fillTableSanPham();
        fillTableDonHang();
        updateStatus();
        
        //Báo cáo số lượng trong kho còn ít hơn 20
        String announcement = outOfIngredients();
        if (announcement.length() > 0) {
            MsgBox.alert(this, "Các nguyên liệu sắp hết\n" + announcement);
            announcement = "";
        }
    }
    
    //số lượng trong kho còn ít hơn 20 thì thêm vào chuỗi
    public String outOfIngredients() {
        String announcement = "";
        for (NguyenLieu nl : nlDAO.selectAll()) 
            if (nl.getSoLuong() < 20) 
                announcement += nl.getTenNL() + " (còn " + nl.getSoLuong() + ")\n";
        return announcement;
    }
    

    public void hienThiTrangThai() {
        if (Auth.user != null) {
            lblTrangThai.setText(Auth.user.getChucVu() + ": " + Auth.user.getHoTen());
        } else {
            lblTrangThai.setText("Hệ thống quản lý quán cà phê");
        }
    }

    public void openChaoJDialog() {
        new ChaoJDialog(this, true).setVisible(true);
    }

    public void openDangNhapJDialog() {
        new DangNhapJDialog(this, true).setVisible(true);
        hienThiTrangThai();
    }

    public void openDoiMatKhauJDiaglog() {
        if (Auth.isLogin()) {
            new DoiMatKhauJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openNhanVienJDialog() {
        if (Auth.isLogin()) {
            if (!Auth.isManager()) {
                MsgBox.alert(this, "Bạn không có quyền quản lý nhân viên!");
                return;
            }

            new NhanVienJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openSanPhamJDialog() {
        if (Auth.isLogin()) {
            if (!Auth.isManager()) {
                MsgBox.alert(this, "Bạn không có quyền quản lý sản phẩm!");
                return;
            }

            new SanPhamJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openKhachHangJDialog() {
        if (Auth.isLogin()) {
            new KhachHangJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openThongTinCaNhanJDialog() {
        if (Auth.isLogin()) {
            new ThongTinCaNhanJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openNguyenLieuJDialog() {
        if (Auth.isLogin()) {
            if (!Auth.isManager()) {
                MsgBox.alert(this, "Bạn không có quyền quản lý nguyên liệu!");
                return;
            }

            new NguyenLieuJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openXuatNhapKhoJDialog() {
        if (Auth.isLogin()) {
            if (!Auth.isManager()) {
                MsgBox.alert(this, "Bạn không có quyền quản lý xuất nhập kho!");
                return;
            }

            new XuatNhapKhoJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void openThongKeJDialog() {
        if (Auth.isLogin()) {
            if (!Auth.isManager()) {
                MsgBox.alert(this, "Bạn không có quyền xem thống kê!");
                return;
            }

            new ThongKeJDialog(this, true).setVisible(true);
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void dangXuat() {
        Auth.clear();
        hienThiTrangThai();
        openDangNhapJDialog();
    }

    public void fillComboBoxLoaiSanPham() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSanPham.getModel();
        model.removeAllElements();

        try {
            List<LoaiSanPham> list = lspDAO.selectAll();

            for (LoaiSanPham lsp : list) {
                model.addElement(lsp);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void fillTableSanPham() {
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0);

        try {
            LoaiSanPham lsp = (LoaiSanPham) cboLoaiSanPham.getSelectedItem();

            if (lsp != null) {
                List<SanPham> list = spDAO.selectByMaLSPAndTrangThai(lsp.getMaLSP());

                for (SanPham item : list) {
                    Object[] rows = {
                        item.getMaSP(),
                        item.getTenSP(),
                        item.getDonGia()
                    };

                    model.addRow(rows);
                }
            }
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void selectSanPham(int index) {
        try {
            String maSP = (String) tblSanPham.getValueAt(index, 0);
            SanPham sp = spDAO.selectById(maSP);
            if (sp != null) {
                txtMaSP.setText(sp.getMaSP());
                txtTenSP.setText(sp.getTenSP());
                txtDonGia.setText(String.valueOf(sp.getDonGia()));
                txtSoLuong.setText("1");
            }
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    public void updateStatus() {
        boolean create = donHang == null;

        btnTaoMoi.setEnabled(create);
        btnThem.setEnabled(!create);
        btnCapNhat.setEnabled(!create);
        btnXoa.setEnabled(!create);
        btnThongTinKhachHang.setEnabled(!create);
        btnThanhToan.setEnabled(!create);
        btnHuyDonHang.setEnabled(!create);
    }

    public void createDonDang() {
        clearForm();

        if (!Auth.isLogin()) {
            MsgBox.alert(this, "Vui lòng đăng nhập");
            return;
        }

        // Không cho phép chọn Select hàng trong bảng
        tblDonHang.setRowSelectionAllowed(false);

        String maNV = Auth.user.getMaNV();

        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        long maDH = timestamp.getTime();

        Date ngayTao = new Date();

        donHang = new DonHang(maDH, maNV, ngayTao, 0, 0, 0);

        try {
            dhDAO.insertKhongKhachHang(donHang);

            txtMaDH.setText(String.valueOf(donHang.getMaDH()));
            txtNgayTao.setText(XDate.toString(ngayTao, pattern));
            txtNhanVien.setText(donHang.getMaNV());

            updateStatus();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    public void addSanPham() {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        String maSP = txtMaSP.getText();

        if (maSP.isEmpty()) {
            MsgBox.alert(this, "Bạn chưa chọn sản phẩm!");
            return;
        }

        int soLuong;

        try {
            soLuong = Integer.parseInt(txtSoLuong.getText());
            if (soLuong < 1) {
                throw new Exception();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Số lượng phải là số > 0");
            return;
        }

        ChiTietDonHang ctdh = new ChiTietDonHang(maDH, maSP, soLuong, "");
        boolean check = false;

        try {
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(maDH);
            for (ChiTietDonHang item : list) {
                if (item.getMaSP().equalsIgnoreCase(maSP)) {
                    soLuong = soLuong + item.getSoLuong();
                    item.setSoLuong(soLuong);
                    ctdhDAO.update(item);
                    check = true;
                    break;
                }
            }

            if (check == false) {
                ctdhDAO.insert(ctdh);
            }

            fillTableChiTietDonHang();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }

    }

    public void removeSanPham() {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        String maSP;
        try {
            int index = tblChiTietDonHang.getSelectedRow();
            maSP = (String) tblChiTietDonHang.getValueAt(index, 0);
        } catch (Exception e) {
            MsgBox.alert(this, "Bạn chưa chọn sản phẩm để xóa!");
            return;
        }

        try {
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(maDH);
            for (ChiTietDonHang item : list) {
                if (item.getMaSP().equalsIgnoreCase(maSP)) {
                    ctdhDAO.delete(item.getMaCTDH());
                    break;
                }
            }

            fillTableChiTietDonHang();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }

    }

    public void selectChiTietDonHang(int index) {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        try {
            String maSP = (String) tblChiTietDonHang.getValueAt(index, 0);
            SanPham sp = spDAO.selectById(maSP);
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(maDH);
            for (ChiTietDonHang item : list) {
                if (item.getMaSP().equalsIgnoreCase(maSP)) {
                    txtMaSP.setText(maSP);
                    txtTenSP.setText(sp.getTenSP());
                    txtDonGia.setText(String.valueOf(sp.getDonGia()));
                    txtSoLuong.setText(String.valueOf(item.getSoLuong()));
                    break;
                }
            }

        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    public void updateSanPham() {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        String maSP;
        try {
            int index = tblChiTietDonHang.getSelectedRow();
            maSP = (String) tblChiTietDonHang.getValueAt(index, 0);
        } catch (Exception e) {
            MsgBox.alert(this, "Bạn chưa chọn sản phẩm để cập nhật!");
            return;
        }

        int soLuong;

        try {
            soLuong = Integer.parseInt(txtSoLuong.getText());
            if (soLuong < 1) {
                throw new Exception();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Số lượng phải là số > 0");
            return;
        }

        try {
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(maDH);
            for (ChiTietDonHang item : list) {
                if (item.getMaSP().equalsIgnoreCase(maSP)) {
                    item.setSoLuong(soLuong);
                    ctdhDAO.update(item);
                    break;
                }
            }

            fillTableChiTietDonHang();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    public void fillTableChiTietDonHang() {
        DefaultTableModel model = (DefaultTableModel) tblChiTietDonHang.getModel();
        model.setRowCount(0);

        if (donHang == null) {
            model.setRowCount(0);
            return;
        }

        try {
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(donHang.getMaDH());

            for (ChiTietDonHang item : list) {
                SanPham sp = spDAO.selectById(item.getMaSP());

                Object[] rows = {
                    sp.getMaSP(),
                    sp.getTenSP(),
                    sp.getDonGia(),
                    item.getSoLuong()
                };

                // Thêm hàng vào bảng 
                model.addRow(rows);
            }

            txtTongTien.setText(String.valueOf(tinhTongTien()));
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void selectKhachHang() {
        if (Auth.isLogin()) {
            KhachHangJDialog khachHangJDialog = new KhachHangJDialog(this, true);
            khachHangJDialog.setVisible(true);

            if (khachHangJDialog.kh != null) {
                khachHang = khachHangJDialog.kh;
                txtKhachHang.setText(String.valueOf(khachHang.getMaKH()));
            }
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }

    public void fillTableDonHang() {
        DefaultTableModel model = (DefaultTableModel) tblDonHang.getModel();
        model.setRowCount(0);

        try {
            List<DonHang> list = dhDAO.selectAllByToday();

            for (DonHang item : list) {
                Date ngayTao = item.getNgayTao();
                Object[] rows = {
                    item.getMaDH(),
                    item.getMaNV(),
                    item.getMaKH(),
                    ngayTao,
                    item.getTongTien()
                };

                model.addRow(rows);
            }
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public int tinhTongTien() {
        int tongTien = 0;

        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return 0;
        }

        long maDH = donHang.getMaDH();

        try {
            List<ChiTietDonHang> list = ctdhDAO.selectByMaDH(maDH);
            for (ChiTietDonHang item : list) {
                SanPham sp = spDAO.selectById(item.getMaSP());
                int soLuong = item.getSoLuong();
                int donGia = (int) sp.getDonGia();

                tongTien += soLuong * donGia;
            }
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }

        return tongTien;
    }

    public void tinhTienThua() {
        int tongTien = tinhTongTien();
        int tienKhachDua = 0;

        try {
            tienKhachDua = Integer.parseInt(txtTienKhachDua.getText());

            if (tienKhachDua >= tongTien) {
                int tienThua = tienKhachDua - tongTien;

                txtTienThua.setText(tienThua + "");
            } else {
                MsgBox.alert(this, "Tiền khách đưa không đủ!");
                txtTienThua.setText("");
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Tiền khách đưa không hợp lệ");
        }
    }

    public void clearForm() {
        donHang = null;
        khachHang = null;

        // Cho phép chọn hàng trong Table
        tblDonHang.setRowSelectionAllowed(true);

        tblSanPham.clearSelection();
        tblDonHang.clearSelection();
        tblChiTietDonHang.clearSelection();

        fillTableChiTietDonHang();

        txtMaDH.setText("");
        txtNhanVien.setText("");
        txtKhachHang.setText("");
        txtNgayTao.setText("");

        txtMaSP.setText("");
        txtTenSP.setText("");
        txtDonGia.setText("");
        txtSoLuong.setText("");

        txtTongTien.setText("");
        txtTienKhachDua.setText("");
        txtTienThua.setText("");

        updateStatus();
    }
    
    CongThucDAO ctDAO = new CongThucDAO();
    public void thanhToan() {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        if (ctdhDAO.selectByMaDH(maDH).isEmpty()) {
            MsgBox.alert(this, "Đơn hàng không có sản phẩm!");
            return;
        }

        donHang.setTongTien(tinhTongTien());

        try {
            int tienKhachDua = Integer.parseInt(txtTienKhachDua.getText());
            int tienThua = Integer.parseInt(txtTienThua.getText());

            if (tienKhachDua >= tinhTongTien()) {
                donHang.setTienKhachDua(tienKhachDua);
                donHang.setTienThua(tienThua);
            } else {
                MsgBox.alert(this, "Tiền khách đưa không đủ!");
                return;
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Vui lòng nhập tiền khách đưa!");
            return;
        }

        try {
            if (khachHang == null) {
                dhDAO.updateKhongKhachHang(donHang);
            } else {
                donHang.setMaKH(khachHang.getMaKH());
                dhDAO.update(donHang);
            }

            //inHoaDon();
            
            //lấy ds chitietdonhang từ maDH
            //lấy ds congthuc từ mỗi maSP trong chitietdonhang
            //truy xuất nguyenlieu trong maNL
            //số lượng nl trong kho - (số lượng nl trong công thức * số lượng trong cthd)
            String announcement = "";
            for (ChiTietDonHang ctdh : ctdhDAO.selectByMaDH(donHang.getMaDH())) {
                for (CongThuc ct : ctDAO.selectByMaSP(ctdh.getMaSP())) {
                    NguyenLieu nlTrongKho = new NguyenLieu();
                    nlTrongKho = nlDAO.selectById(ct.getMaNL());
                    nlTrongKho.setSoLuong(nlTrongKho.getSoLuong() - (ct.getSoLuong() * ctdh.getSoLuong()));
                    nlDAO.update(nlTrongKho);
                    
                    //kiểm tra nếu nguyên liệu vừa pha chế trong kho ít hơn 20 
                    //thì cộng vào chuỗi để thống báo
                    nlTrongKho = nlDAO.selectById(ct.getMaNL());
                    if (nlTrongKho.getSoLuong() < 20)
                        announcement += nlTrongKho.getTenNL() + " (còn " + nlTrongKho.getSoLuong() + ")\n";
                }
            }
            //thông báo nếu có nguyên liệu vừa sử dụng sắp hết
            if (announcement.length() > 0) {
                MsgBox.alert(this, "Một vài nguyên liệu vừa sử dụng sắp hết\n" + announcement);
                announcement = "";
            }
            
            clearForm();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }

        fillTableDonHang();
    }

    public void huyDonHang() {
        if (donHang == null) {
            MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
            return;
        }

        long maDH = donHang.getMaDH();

        try {
            dhDAO.delete(maDH);
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }

        clearForm();
        fillTableDonHang();
    }

    public void selectDonHang(int index) {
        try {
            Long maDH = Long.parseLong(tblDonHang.getValueAt(index, 0).toString());
            donHang = dhDAO.selectById(maDH);
            fillTableChiTietDonHang();
            fillThongTinDonHang();
        } catch (Exception e) {
            System.out.println(e);
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    public void fillThongTinDonHang() {
        txtMaDH.setText(String.valueOf(donHang.getMaDH()));
        txtNhanVien.setText(donHang.getMaNV());
        txtKhachHang.setText(String.valueOf(donHang.getMaKH()));
        txtNgayTao.setText(XDate.toString(donHang.getNgayTao(), pattern));

        txtTongTien.setText(String.valueOf(donHang.getTongTien()));
        txtTienKhachDua.setText(String.valueOf(donHang.getTienKhachDua()));
        txtTienThua.setText(String.valueOf(donHang.getTienThua()));
    }

    public void inHoaDon() {
        try {
            if (donHang == null) {
                MsgBox.alert(this, "Bạn chưa chọn tạo hóa đơn mới!");
                return;
            }

            Hashtable map = new Hashtable();
            JasperReport rpt = JasperCompileManager.compileReport("src/com/coffeesys/report/rptHoaDon.jrxml");

            map.put("MaDH", donHang.getMaDH());
            Connection connection = JDBCHelper.getDBConnect();
            JasperPrint print = JasperFillManager.fillReport(rpt, map, connection);
            JasperViewer.viewReport(print, false);

            // In hóa đơn thành file pdf
            String path = "report/hoadon/" + donHang.getMaDH() + ".pdf";
            File file = new File(path);
            if (!file.getParentFile().exists()) {
                //Tạo thư mục hóa đơn nêu chưa tồn tại
                file.getParentFile().mkdirs();
            }
            JasperExportManager.exportReportToPdfFile(print, path);
        } catch (JRException ex) {
            Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JToolBar ToolBar;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnHuyDonHang;
    private javax.swing.JButton btnKhachHang;
    private javax.swing.JButton btnNhanVien;
    private javax.swing.JButton btnSanPham;
    private javax.swing.JButton btnTaoMoi;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JButton btnThongTinKhachHang;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboLoaiSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblTrangThai;
    private javax.swing.JMenuItem mniDangXuat;
    private javax.swing.JMenuItem mniDoiMatKhau;
    private javax.swing.JMenuItem mniQuanLyKhachHang;
    private javax.swing.JMenuItem mniQuanLyNguyenLieu;
    private javax.swing.JMenuItem mniQuanLyNhanVien;
    private javax.swing.JMenuItem mniQuanLySanPham;
    private javax.swing.JMenuItem mniQuanLyXuatNhapKho;
    private javax.swing.JMenuItem mniThongKeDoanhThu;
    private javax.swing.JMenuItem mniThongKeKhoHang;
    private javax.swing.JMenuItem mniThongKeSanPham;
    private javax.swing.JMenuItem mniThongTinCaNhan;
    private javax.swing.JMenu mnuHeThong;
    private javax.swing.JMenu mnuQuanLy;
    private javax.swing.JMenu mnuThongKe;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlOrder;
    private javax.swing.JPanel pnlQuanLyBanHang;
    private javax.swing.JPanel pnlTrangThai;
    private javax.swing.JTable tblChiTietDonHang;
    private javax.swing.JTable tblDonHang;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtKhachHang;
    private javax.swing.JTextField txtMaDH;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNgayTao;
    private javax.swing.JTextField txtNhanVien;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienThua;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
